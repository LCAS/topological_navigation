<?xml version="1.0" ?>
<launch>

  <arg name="machine" default="localhost" />
  <arg name="user" default="" />

  <!-- Robot base frame. -->
  <arg name="base_frame" default="base_link" />
  <!-- The action being used for move_base -->
  <arg name="move_base_name" default="move_base"/>
  <!-- The local planner being used by move_base.  -->
  <arg name="move_base_planner" default="move_base/DWAPlannerROS"/>
  <!-- If the action of the current or next edge in the route is not in this list then the robot must get to the exact pose of the current edge's destination node. -->
  <arg name="move_base_actions" default="['move_base', 'row_change/move_base']"/>
  <!-- Plan from destination node of closest edge if dist from closest edge <= max_dist_to_closest_edge else plan from closest node. -->
  <arg name="max_dist_to_closest_edge" default="1.0"/>
  <!-- If true reconfigure parameters according to the config of the current edge. -->
  <arg name="reconfigure_edges" default="true"/>
  <!-- If we are using the restricted tmap rather than the normal tmap. Must first publish the robot type: rostopic pub /type std_msgs/String "data: $RES_ROBOT_TYPE" -->
  <arg name="use_restrictions" default="true"/>


  <machine name="$(arg machine)" address="$(arg machine)" env-loader="$(optenv ROS_ENV_LOADER )" user="$(arg user)" default="true"/>

  <node pkg="topological_navigation" name="restrictions_manager" type="restrictions_manager.py" output="screen" respawn="true" if="$(arg use_restrictions)" >
    <!--param name="config_file" type="str" value="$(arg coord_config_file)"/-->
    <param name="out_topic" type="str" value="restricted_topological_map"/>
    <remap from="type" to="robot_type" />
    <remap from="task" to="task_type" />
  </node>

    <node pkg="topological_navigation" name="topological_transform_publisher" type="topological_transform_publisher.py" output="screen" respawn="true">
      <remap from="topological_map_2" to="restricted_topological_map_2" if="$(arg use_restrictions)"/>
      <remap from="topological_map_2" to="/topological_map_2" unless="$(arg use_restrictions)"/>
    </node>

  <node pkg="topological_navigation" name="topological_localisation" type="localisation.py" output="screen" respawn="true">
    <param name="base_frame" value="$(arg base_frame)"/>
    <remap from="/topological_map_2" to="/restricted_topological_map_2" if="$(arg use_restrictions)"/>
    <remap from="/topological_map" to="/restricted_topological_map"  if="$(arg use_restrictions)"/>
  </node>

  <node pkg="topological_navigation" name="topological_navigation" type="navigation.py" output="screen" respawn="true">
    <remap from="move_base" to="robot/move_base" />

    <param name="move_base_name" type="str" value="$(arg move_base_name)"/>
    <param name="move_base_planner" type="str" value="$(arg move_base_planner)"/>
    <param name="max_dist_to_closest_edge" value="$(arg max_dist_to_closest_edge)"/>
    <param name="reconfigure_edges" value="$(arg reconfigure_edges)"/>
    <rosparam param="move_base_actions" subst_value="True">$(arg move_base_actions)</rosparam>
    <remap from="/topological_map_2" to="/restricted_topological_map_2"  if="$(arg use_restrictions)"/>
    <remap from="/topological_map" to="/restricted_topological_map"  if="$(arg use_restrictions)"/>
  </node>

  <node pkg="topological_navigation" type="visualise_map.py" name="visualise_map" respawn="true">
    <remap from="/topological_map_2" to="/restricted_topological_map_2"  if="$(arg use_restrictions)"/>
    <remap from="/topological_map" to="/restricted_topological_map"  if="$(arg use_restrictions)"/>
  </node>

  <node pkg="bacchus_navigation" type="handling_2side_navigation.py" name="handling_2side_navigation" respawn="true">
  </node>

  <node pkg="topological_navigation" type="get_simple_policy.py" name="get_simple_policy" respawn="true">
  </node>


</launch>

