<?xml version="1.0" ?>
<launch>

  <arg name="robot" default="false"/>
  <arg name="map_dir" default="" if="$(arg robot)"/>
  <arg name="map_dir" default="$(find strands_morse)/mba/maps" unless="$(arg robot)"/>

  <group unless="$(arg robot)">
    <include file="$(find mongodb_store)/launch/mongodb_store.launch">
      <arg name="test_mode" value="true"/>
    </include>

    <!--include file="$(find strands_morse)/mba/launch/move_base_arena.launch">
      <arg name="env" value="mba_test"/>
    </include>
    <include file="$(find strands_morse)/mba/launch/move_base_arena_nav.launch"/-->

    <include file="$(find topological_navigation)/launch/topological_navigation_empty_map.launch">
      <arg name="map" value="empty"/>
      <arg name="mon_nav_config_file" value=""/>
      <arg name="execute_policy_retries" value="0"/>
      <arg name="topological_navigation_retries" value="0"/>
    </include>
  </group>

  <node name="route_search" type="get_simple_policy.py" pkg="topological_navigation"/>

  <node name="scenario_server" type="scenario_server.py" pkg="topological_navigation" output="screen">
    <param name="robot" type="bool" value="$(arg robot)"/>
    <param name="map_dir" type="string" value="$(arg map_dir)"/>
  </node>

  <group unless="$(arg robot)">
    <test time-limit="1800.0" test-name="topological_navigation_tester" pkg="topological_navigation" type="topological_navigation_tester_critical.py" />
  </group>

  <group if="$(arg robot)">
    <node name="navigation_test_joypad_control" type="navigation_test_joypad_control.py" pkg="topological_navigation" output="screen"/>
  </group>

</launch>
